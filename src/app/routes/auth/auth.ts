import { expressjwt as jwt } from 'express-jwt';
import * as express from 'express';

const getTokenFromHeaders = (req: express.Request): string | null => {
  if (
    (req.headers.authorization && req.headers.authorization.split(' ')[0] === 'Token') ||
    (req.headers.authorization && req.headers.authorization.split(' ')[0] === 'Bearer')
  ) {
    return req.headers.authorization.split(' ')[1];
  }
  return null;
};

// Use during run and summarize
const dummyMiddleware = (req: express.Request, res: express.Response, next: express.NextFunction) => {
  // set id to whatever id is generated by creating the user for the first time
  req.auth = {
    user: {
      // Change to most recent userId
      id: 53,
    },
  };
  next();
};

const auth = {
  required: dummyMiddleware,
  // Use during /load.bash
  // required: jwt({
  //   secret: process.env.JWT_SECRET || 'superSecret',
  //   getToken: getTokenFromHeaders,
  //   algorithms: ['HS256'],
  // }),
  optional: jwt({
    secret: process.env.JWT_SECRET || 'superSecret',
    credentialsRequired: false,
    getToken: getTokenFromHeaders,
    algorithms: ['HS256'],
  }),
};

export default auth;
